# .github/workflows/backend-ci-cd.yml

name: Backend CI/CD Pipeline

# This workflow runs on any push to the 'main' branch,
# but ONLY if changes were made inside the 'backend/' directory.
on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend/**'
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Use a standard Linux runner

    steps:
      # 1. Check out the repository code
      - name: Check out code
        uses: actions/checkout@v4

      # 2. Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. Cache dependencies for faster builds
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Install project dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install ruff pytest # Install linting and testing tools

      # 5. Lint with Ruff (checks for errors and style issues)
      - name: Lint with Ruff
        run: ruff check backend/app

      # 6. Run tests with Pytest (add your tests in a 'tests/' directory)
      - name: Run tests
        run: pytest backend/tests/

      # 7. Log in to Docker Hub using the secrets we stored
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 8. Build and push the Docker image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend # Tell Docker to look for the Dockerfile in the 'backend' directory
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mfi-saas-backend:latest # Tag the image

      # 9. Trigger the deployment on Render using the deploy hook
      - name: Trigger Render Deploy
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}